/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.unibas.spicygui.vista.csv;

import it.unibas.spicygui.Costanti;
import java.awt.Font;

public class UnpivotCsvSelectAllPanel extends javax.swing.JPanel {
    
    UnpivotCsvMainFrame mainFrame;
    
    public UnpivotCsvSelectAllPanel(UnpivotCsvMainFrame mainFrame) {
        this.mainFrame = mainFrame;
        initComponents();
        initLabels();         
    }    
   
    private void initLabels(){
        includeLabel.setText(org.openide.util.NbBundle.getMessage(Costanti.class, Costanti.INCLUDE_LABEL)); 
        includeLabel.setFont(new Font(includeLabel.getFont().getName(), Font.BOLD, includeLabel.getFont().getSize()));
        unpivotLabel.setText(org.openide.util.NbBundle.getMessage(Costanti.class, Costanti.UNPIVOT_LABEL)); 
        unpivotLabel.setFont(new Font(unpivotLabel.getFont().getName(), Font.BOLD, unpivotLabel.getFont().getSize()));
        selectAllLabel.setText(org.openide.util.NbBundle.getMessage(Costanti.class, Costanti.SELECT_ALL_LABEL)); 
        rowCheckBox.setToolTipText(org.openide.util.NbBundle.getMessage(Costanti.class, Costanti.SELECT_ALL_LABEL));
    }
    
    public boolean isColumnSelected(){
        return this.rowCheckBox.isSelected();
    }
    
    private void selectAll(boolean val){
        for (UnpivotCsvColumnPanel panel: mainFrame.getColumnsList()){
            if (panel.isColumnIncluded())
                panel.setCheckboxSelected(val);
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rowCheckBox = new javax.swing.JCheckBox();
        includeLabel = new javax.swing.JLabel();
        unpivotLabel = new javax.swing.JLabel();
        selectAllLabel = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(100, 76));

        org.openide.awt.Mnemonics.setLocalizedText(rowCheckBox, org.openide.util.NbBundle.getMessage(UnpivotCsvSelectAllPanel.class, "UnpivotCsvColumnPanel.rowCheckBox.text")); // NOI18N
        rowCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rowCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(selectAllLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rowCheckBox))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(includeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(unpivotLabel)))
                .addGap(6, 6, 6))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(includeLabel)
                    .addComponent(unpivotLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rowCheckBox)
                    .addComponent(selectAllLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rowCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rowCheckBoxActionPerformed
        if (this.rowCheckBox.isSelected()){
            selectAll(true);
        }
        else{
            //clear all
            selectAll(false);
        }
    }//GEN-LAST:event_rowCheckBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel includeLabel;
    private javax.swing.JCheckBox rowCheckBox;
    private javax.swing.JLabel selectAllLabel;
    private javax.swing.JLabel unpivotLabel;
    // End of variables declaration//GEN-END:variables
}
